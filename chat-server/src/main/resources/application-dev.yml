spring:
  frontend:
    url: http://localhost:3001
    
  kafka:
    bootstrap-servers: localhost:29092

    listener:
      ack-mode: manual
      retry:
        enabled: true
      missing-topics-fatal: false
    consumer:
      auto-offset-reset: earliest
      enable-auto-commit: false
      properties:
        retry.backoff.ms: 1000
        max.poll.interval.ms: 300000
    producer:
      acks: all
      retries: 2147483647
      properties:
        enable.idempotence: true
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

  datasource:
    url: jdbc:mysql://localhost:3306/chatdb
    username: chat
    password: chat1234
    driver-class-name: com.mysql.cj.jdbc.Driver

  redis:
    host: localhost
    port: 6379  # 개발 환경

  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        show_sql: false    # SQL 쿼리 숨기기
        format_sql: false  # SQL 포맷팅 비활성화

logging.level:
  org.hibernate.SQL: OFF   # Hibernate SQL 로깅 끄기
  org.hibernate.type.descriptor.sql: OFF  # SQL 파라미터 로깅 끄기
  root: info              # 다른 로그는 info 레벨 유지
  org.springframework: info
  com.sns.project: debug  # 프로젝트 로그는 debug 레벨 유지


jwt:
  expiration: 86400000  # 24시간
  secret: T+FITVBc8qEi9tZ/TgN7mfZ9wb0BqArbh4B+RMZ9zKU=


springdoc:
  api-docs:
    enabled: true  # API 문서 활성화
  swagger-ui:
    path: /swagger-ui.html  # Swagger UI 접근 경로
    operationsSorter: method  # API 문서에서 HTTP 메서드 정렬
    tagsSorter: alpha  # API 태그 알파벳 정렬
    display-request-duration: true  # 요청 처리 시간 표시





